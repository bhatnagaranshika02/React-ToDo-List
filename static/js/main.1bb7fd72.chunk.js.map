{"version":3,"sources":["App.js","index.js"],"names":["App","props","state","newItem","list","this","hydrateStateWithLocalStorage","window","addEventListener","saveStateToLocalStorage","bind","removeEventListener","key","localStorage","hasOwnProperty","value","getItem","JSON","parse","setState","e","setItem","stringify","id","Math","random","slice","push","updatedList","filter","item","className","style","padding","textAlign","maxWidth","margin","class","type","placeholder","onChange","updateInput","target","onClick","addItem","disabled","length","map","deleteItem","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAuJeA,E,kDAnJb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,QAAS,GACTC,KAAM,IAJS,E,gEAUjBC,KAAKC,+BAILC,OAAOC,iBACL,eACAH,KAAKI,wBAAwBC,KAAKL,S,6CAKpCE,OAAOI,oBACL,eACAN,KAAKI,wBAAwBC,KAAKL,OAIpCA,KAAKI,4B,qDAKL,IAAK,IAAIG,KAAOP,KAAKH,MAEnB,GAAIW,aAAaC,eAAeF,GAAM,CAEpC,IAAIG,EAAQF,aAAaG,QAAQJ,GAGjC,IACEG,EAAQE,KAAKC,MAAMH,GACnBV,KAAKc,SAAL,eAAiBP,EAAMG,IACvB,MAAOK,GAEPf,KAAKc,SAAL,eAAiBP,EAAMG,Q,gDAQ7B,IAAK,IAAIH,KAAOP,KAAKH,MAEnBW,aAAaQ,QAAQT,EAAKK,KAAKK,UAAUjB,KAAKH,MAAMU,O,kCAI5CA,EAAKG,GAEfV,KAAKc,SAAL,eAAiBP,EAAMG,M,gCAKvB,IAAMZ,EAAU,CACdoB,GAAI,EAAIC,KAAKC,SACbV,MAAOV,KAAKH,MAAMC,QAAQuB,SAKtBtB,EAAI,YAAOC,KAAKH,MAAME,MAG5BA,EAAKuB,KAAKxB,GAGVE,KAAKc,SAAS,CACZf,OACAD,QAAS,O,iCAIFoB,GAET,IAEMK,EAFI,YAAOvB,KAAKH,MAAME,MAEHyB,QAAO,SAAAC,GAAI,OAAIA,EAAKP,KAAOA,KAEpDlB,KAAKc,SAAS,CAAEf,KAAMwB,M,+BAGd,IAAD,OACP,OACE,gCAEA,oBAAIG,UAAU,YAAd,SAA0B,qFAExB,qBAAKA,UAAU,YAAf,SACA,sBACEC,MAAO,CACLC,QAAS,GACTC,UAAW,OACXC,SAAU,IACVC,OAAQ,QALZ,UAQE,4BAAG,gEACH,uBACA,uBAAOC,MAAM,aACXC,KAAK,OACLC,YAAY,aACZxB,MAAOV,KAAKH,MAAMC,QAClBqC,SAAU,SAAApB,GAAC,OAAI,EAAKqB,YAAY,UAAWrB,EAAEsB,OAAO3B,UAdxD,YAmBE,wBACEgB,UAAU,uBACVY,QAAS,kBAAM,EAAKC,WACpBC,UAAWxC,KAAKH,MAAMC,QAAQ2C,OAHhC,SAKE,mBAAGT,MAAM,iBAAT,mBAEF,uBA1BF,IA0BS,uBACP,6BACGhC,KAAKH,MAAME,KAAK2C,KAAI,SAAAjB,GACnB,OACE,+BACGA,EAAKf,MACN,wBAAQgB,UAAU,mBAAmBY,QAAS,kBAAM,EAAKK,WAAWlB,EAAKP,KAAzE,SACE,mBAAGc,MAAM,iBAAT,mBAHKP,EAAKP,qB,GAnIZ0B,IAAMC,WCGxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1bb7fd72.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newItem: \"\",\n      list: []\n    };\n  }\n\n  //incorporating local storage \n  componentDidMount() {\n    this.hydrateStateWithLocalStorage();\n\n    // add event listener to save state to localStorage\n    // when user leaves/refreshes the page\n    window.addEventListener(\n      \"beforeunload\",\n      this.saveStateToLocalStorage.bind(this)\n    );\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\n      \"beforeunload\",\n      this.saveStateToLocalStorage.bind(this)\n    );\n\n    // saves if component has a chance to unmount\n    this.saveStateToLocalStorage();\n  }\n\n  hydrateStateWithLocalStorage() {\n    // for all items in state\n    for (let key in this.state) {\n      // if the key exists in localStorage\n      if (localStorage.hasOwnProperty(key)) {\n        // get the key's value from localStorage\n        let value = localStorage.getItem(key);\n\n        // parse the localStorage string and setState\n        try {\n          value = JSON.parse(value);\n          this.setState({ [key]: value });\n        } catch (e) {\n          // handle empty string\n          this.setState({ [key]: value });\n        }\n      }\n    }\n  }\n\n  saveStateToLocalStorage() {\n    // for every item in React state\n    for (let key in this.state) {\n      // save to localStorage\n      localStorage.setItem(key, JSON.stringify(this.state[key]));\n    }\n  }\n\n  updateInput(key, value) {\n    // update react state\n    this.setState({ [key]: value });\n  }\n\n  addItem() {\n    // create a new item with unique id\n    const newItem = {\n      id: 1 + Math.random(),\n      value: this.state.newItem.slice()\n \n    };\n\n    // copy current list of items\n    const list = [...this.state.list];\n\n    // add the new item to the list\n    list.push(newItem);\n\n    // update state with new list, reset the new item input\n    this.setState({\n      list,\n      newItem: \"\"\n    });\n  }\n\n  deleteItem(id) {\n    // copy current list of items\n    const list = [...this.state.list];\n    // filter out the item being deleted\n    const updatedList = list.filter(item => item.id !== id);\n\n    this.setState({ list: updatedList });\n  }\n  \n  render() {\n    return (\n      <div>\n\n      <h1 className=\"app-title\"><u>Swing a cup of coffee and prepare your TO-DO List.</u></h1>\n        \n        <div className=\"container\">\n        <div\n          style={{\n            padding: 30,\n            textAlign: \"left\",\n            maxWidth: 500,\n            margin: \"auto\"\n          }}\n        >\n          <b><i>What do you wanna do today ??</i></b>\n          <br />\n          <input class=\"text-field\"\n            type=\"text\"\n            placeholder=\"Typing....\"\n            value={this.state.newItem}\n            onChange={e => this.updateInput(\"newItem\", e.target.value)}\n          ></input>\n\n          &nbsp; &nbsp;\n\n          <button\n            className=\"add-btn btn-floating\"\n            onClick={() => this.addItem()}\n            disabled={!this.state.newItem.length}\n          >\n            <i class=\"material-icons\"> + </i>\n          </button>\n          <br /> <br />\n          <ul>\n            {this.state.list.map(item => {\n              return (\n                <li key={item.id}>\n                  {item.value}\n                  <button className=\"btn btn-floating\" onClick={() => this.deleteItem(item.id)}>\n                    <i class=\"material-icons\">x</i>\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}